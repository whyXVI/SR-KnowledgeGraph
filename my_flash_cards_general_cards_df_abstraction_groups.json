"{\"0\":{\"Question\":\"How do you use dual numbers for differentiation?\",\"Answer\":\"Dual numbers are numbers that square to zero, similar to infinitesimals. To find the derivative, substitute x + dual epsilon, expand the result, and take the linear term.\",\"Key ideas\":\"1. Dual numbers are numbers that square to zero, similar to infinitesimals.\\n2. To use dual numbers for differentiation, substitute x + dual epsilon into the function.\\n3. Expand the result of the function with the substituted dual number.\\n4. Take the linear term of the expanded result to find the derivative.\",\"Abstraction groups\":{\"-1\":[\"Dual Number\",\"Differentiation\",\"Derivative\",\"Infinitesimal\",\"Linear Term\"],\"0\":[\"Dual Number\"],\"1\":[\"Mathematics\"],\"2\":[\"Calculus\"],\"3\":[\"Mathematical Analysis\"],\"4\":[\"Mathematics\"]}},\"1\":{\"Question\":\"How is a double formatted in C? (similar to a float in Python)\",\"Answer\":\"64 bits of information. 1 bit for the sign, 11 bits for the exponent, and 52 bits for the mantissa. To extract the number, use the formula: sign * mantissa * 2^(exponent)\",\"Key ideas\":\"1. A double in C is a data type used to store floating-point numbers with double precision.\\n2. A double in C is similar to a float in Python, but with more bits of information.\\n3. A double in C is formatted with 64 bits of information, divided into 1 bit for the sign, 11 bits for the exponent, and 52 bits for the mantissa.\\n4. To extract the number stored in a double in C, use the formula: sign * mantissa * 2^(exponent).\",\"Abstraction groups\":{\"-1\":[\"Double\",\"C\",\"Float\",\"Python\",\"64 Bit\",\"Sign\",\"Exponent\",\"Mantissa\",\"Formula\"],\"0\":[\"Double\"],\"1\":[\"Data Type\"],\"2\":[\"Programming\"],\"3\":[\"Computer Science\"],\"4\":[\"Science\"]}},\"2\":{\"Question\":\"Which method of differentiation is naturally susceptible to rounding errors?\",\"Answer\":\"Numerical differentiation involves approximating derivatives using numerical methods, while symbolic differentiation involves finding exact derivatives using algebraic manipulation.\",\"Key ideas\":\"1. Differentiation is a mathematical process used to find the rate at which a quantity changes.\\n2. Numerical differentiation involves approximating derivatives using numerical methods, such as finite differences.\\n3. Rounding errors can occur in numerical differentiation due to the use of approximations and finite precision arithmetic.\\n4. Symbolic differentiation involves finding exact derivatives using algebraic manipulation, without the need for approximations.\\n5. The method of differentiation used can impact the accuracy and precision of the results obtained.\",\"Abstraction groups\":{\"-1\":[\"Differentiation\",\"Numerical Method\",\"Rounding Error\",\"Approximation\",\"Symbolic Differentiation\",\"Algebraic Manipulation\"],\"0\":[\"Differentiation\"],\"1\":[\"Mathematics\"],\"2\":[\"Numerical Method\",\"Symbolic Manipulation\"],\"3\":[\"Approximation\",\"Algebra\"],\"4\":[\"Mathematics\"]}},\"3\":{\"Question\":\"When a set of data can be separated into two distinct groups by a straight line or plane.\",\"Answer\":\"When there is a hyperplane that can accurately separate everything into two classes.\",\"Key ideas\":\"1. Understanding of what a set of data is\\n2. Knowledge of what it means for data to be separated into distinct groups\\n3. Familiarity with the concept of a straight line or plane in geometry\\n4. Understanding of what a hyperplane is\\n5. Knowledge of the concept of classes in data analysis\\n6. Understanding of the idea of accurately separating data into classes\",\"Abstraction groups\":{\"-1\":[\"Data\",\"Group\",\"Line\\/plane\",\"Hyperplane\",\"Class\",\"Separating\"],\"0\":[\"Data Separation\"],\"1\":[\"Data Analysis\"],\"2\":[\"Data Science\",\"Mathematics\"],\"3\":[\"Science\",\"Quantitative Analysis\"],\"4\":[\"Academic Discipline\"]}}}"